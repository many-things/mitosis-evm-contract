/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type { FunctionFragment, Result } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "../common";

export type UnbondingStruct = {
  amount: PromiseOrValue<BigNumberish>;
  createdAt: PromiseOrValue<BigNumberish>;
  claimableAt: PromiseOrValue<BigNumberish>;
};

export type UnbondingStructOutput = [BigNumber, BigNumber, BigNumber] & {
  amount: BigNumber;
  createdAt: BigNumber;
  claimableAt: BigNumber;
};

export interface BondQuerierInterface extends utils.Interface {
  functions: {
    "MAX_QUERY_LIMIT()": FunctionFragment;
    "bond()": FunctionFragment;
    "getUnbondings(address,uint256,uint256)": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic: "MAX_QUERY_LIMIT" | "bond" | "getUnbondings"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "MAX_QUERY_LIMIT",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "bond", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "getUnbondings",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>
    ]
  ): string;

  decodeFunctionResult(
    functionFragment: "MAX_QUERY_LIMIT",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "bond", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getUnbondings",
    data: BytesLike
  ): Result;

  events: {};
}

export interface BondQuerier extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: BondQuerierInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    MAX_QUERY_LIMIT(overrides?: CallOverrides): Promise<[BigNumber]>;

    bond(overrides?: CallOverrides): Promise<[string]>;

    getUnbondings(
      _recipient: PromiseOrValue<string>,
      _start: PromiseOrValue<BigNumberish>,
      _limit: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[UnbondingStructOutput[]]>;
  };

  MAX_QUERY_LIMIT(overrides?: CallOverrides): Promise<BigNumber>;

  bond(overrides?: CallOverrides): Promise<string>;

  getUnbondings(
    _recipient: PromiseOrValue<string>,
    _start: PromiseOrValue<BigNumberish>,
    _limit: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<UnbondingStructOutput[]>;

  callStatic: {
    MAX_QUERY_LIMIT(overrides?: CallOverrides): Promise<BigNumber>;

    bond(overrides?: CallOverrides): Promise<string>;

    getUnbondings(
      _recipient: PromiseOrValue<string>,
      _start: PromiseOrValue<BigNumberish>,
      _limit: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<UnbondingStructOutput[]>;
  };

  filters: {};

  estimateGas: {
    MAX_QUERY_LIMIT(overrides?: CallOverrides): Promise<BigNumber>;

    bond(overrides?: CallOverrides): Promise<BigNumber>;

    getUnbondings(
      _recipient: PromiseOrValue<string>,
      _start: PromiseOrValue<BigNumberish>,
      _limit: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    MAX_QUERY_LIMIT(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    bond(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getUnbondings(
      _recipient: PromiseOrValue<string>,
      _start: PromiseOrValue<BigNumberish>,
      _limit: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
