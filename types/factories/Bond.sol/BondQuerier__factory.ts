/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  BondQuerier,
  BondQuerierInterface,
} from "../../Bond.sol/BondQuerier";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract Bond",
        name: "_bond",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "MAX_QUERY_LIMIT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "bond",
    outputs: [
      {
        internalType: "contract Bond",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_limit",
        type: "uint256",
      },
    ],
    name: "getUnbondings",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "createdAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "claimableAt",
            type: "uint256",
          },
        ],
        internalType: "struct Unbonding[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516105de3803806105de83398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b61054b806100936000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806323beb3dd146100465780632f115d5b1461006157806364c9ec6f14610081575b600080fd5b61004e601e81565b6040519081526020015b60405180910390f35b61007461006f3660046103b3565b6100ac565b60405161005891906103f4565b600054610094906001600160a01b031681565b6040516001600160a01b039091168152602001610058565b6000805460405163ca2221c160e01b81526001600160a01b03868116600483015260609392169063ca2221c190602401602060405180830381865afa1580156100f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061011d919061044d565b6000805460405163d9c3813f60e01b81526001600160a01b0389811660048301529394509192169063d9c3813f90602401602060405180830381865afa15801561016b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061018f919061044d565b90508481111580156101a057508185105b6101e05760405162461bcd60e51b815260206004820152600d60248201526c0d2dcecc2d8d2c840d2dcc8caf609b1b604482015260640160405180910390fd5b60006101fe6101ef868861047c565b6101f9888661048f565b610399565b9050600061021661021087601e610399565b83610399565b905060008167ffffffffffffffff811115610233576102336104a2565b60405190808252806020026020018201604052801561028857816020015b61027560405180606001604052806000815260200160008152602001600081525090565b8152602001906001900390816102515790505b50905060005b8281101561038c5760008060008060009054906101000a90046001600160a01b03166001600160a01b0316635c2235868e868f6102cb919061047c565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401606060405180830381865afa158015610314573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061033891906104b8565b92509250925060405180606001604052808481526020018381526020018281525085858151811061036b5761036b6104e6565b60200260200101819052505050508080610384906104fc565b91505061028e565b5098975050505050505050565b60008183106103a857816103aa565b825b90505b92915050565b6000806000606084860312156103c857600080fd5b83356001600160a01b03811681146103df57600080fd5b95602085013595506040909401359392505050565b602080825282518282018190526000919060409081850190868401855b828110156104405781518051855286810151878601528501518585015260609093019290850190600101610411565b5091979650505050505050565b60006020828403121561045f57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b808201808211156103ad576103ad610466565b818103818111156103ad576103ad610466565b634e487b7160e01b600052604160045260246000fd5b6000806000606084860312156104cd57600080fd5b8351925060208401519150604084015190509250925092565b634e487b7160e01b600052603260045260246000fd5b60006001820161050e5761050e610466565b506001019056fea26469706673582212202d887835e4504bcf380ac3cf7a30948b6e00d3fb14345d3a0266a0793b37d96564736f6c63430008110033";

type BondQuerierConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BondQuerierConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BondQuerier__factory extends ContractFactory {
  constructor(...args: BondQuerierConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _bond: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BondQuerier> {
    return super.deploy(_bond, overrides || {}) as Promise<BondQuerier>;
  }
  override getDeployTransaction(
    _bond: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_bond, overrides || {});
  }
  override attach(address: string): BondQuerier {
    return super.attach(address) as BondQuerier;
  }
  override connect(signer: Signer): BondQuerier__factory {
    return super.connect(signer) as BondQuerier__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BondQuerierInterface {
    return new utils.Interface(_abi) as BondQuerierInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BondQuerier {
    return new Contract(address, _abi, signerOrProvider) as BondQuerier;
  }
}
