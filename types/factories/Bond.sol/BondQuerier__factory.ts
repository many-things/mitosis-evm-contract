/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers'
import type { Provider, TransactionRequest } from '@ethersproject/providers'
import type { PromiseOrValue } from '../../common'
import type {
  BondQuerier,
  BondQuerierInterface,
} from '../../Bond.sol/BondQuerier'

const _abi = [
  {
    inputs: [
      {
        internalType: 'contract Bond',
        name: '_bond',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'MAX_QUERY_LIMIT',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'bond',
    outputs: [
      {
        internalType: 'contract Bond',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_recipient',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_start',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_limit',
        type: 'uint256',
      },
    ],
    name: 'getUnbondings',
    outputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'createdAt',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'claimableAt',
            type: 'uint256',
          },
        ],
        internalType: 'struct Unbonding[]',
        name: '',
        type: 'tuple[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
] as const

const _bytecode =
  '0x608060405234801561001057600080fd5b5060405161059d38038061059d83398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b61050a806100936000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806323beb3dd146100465780632f115d5b1461006157806364c9ec6f14610081575b600080fd5b61004e601e81565b6040519081526020015b60405180910390f35b61007461006f366004610372565b6100ac565b60405161005891906103b3565b600054610094906001600160a01b031681565b6040516001600160a01b039091168152602001610058565b6000805460405163ca2221c160e01b81526001600160a01b03868116600483015260609392169063ca2221c190602401602060405180830381865afa1580156100f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061011d919061040c565b6000805460405163d9c3813f60e01b81526001600160a01b0389811660048301529394509192169063d9c3813f90602401602060405180830381865afa15801561016b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061018f919061040c565b9050600061019e85601e610349565b905060006101b5846101b0858a610363565b610349565b905060006101c7856101b0858561043b565b905060006101d5838361044e565b67ffffffffffffffff8111156101ed576101ed610461565b60405190808252806020026020018201604052801561024257816020015b61022f60405180606001604052806000815260200160008152602001600081525090565b81526020019060019003908161020b5790505b50905060005b610252848461044e565b81101561033b5760008054819081906001600160a01b0316635c2235868f61027a8a8861043b565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401606060405180830381865afa1580156102c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102e79190610477565b92509250925060405180606001604052808481526020018381526020018281525085858151811061031a5761031a6104a5565b60200260200101819052505050508080610333906104bb565b915050610248565b509998505050505050505050565b6000818310610358578161035a565b825b90505b92915050565b6000818311610358578161035a565b60008060006060848603121561038757600080fd5b83356001600160a01b038116811461039e57600080fd5b95602085013595506040909401359392505050565b602080825282518282018190526000919060409081850190868401855b828110156103ff57815180518552868101518786015285015185850152606090930192908501906001016103d0565b5091979650505050505050565b60006020828403121561041e57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561035d5761035d610425565b8181038181111561035d5761035d610425565b634e487b7160e01b600052604160045260246000fd5b60008060006060848603121561048c57600080fd5b8351925060208401519150604084015190509250925092565b634e487b7160e01b600052603260045260246000fd5b6000600182016104cd576104cd610425565b506001019056fea2646970667358221220f66df030bfe458b4884a6df94196b0c438f3587e4583818d3935b5cdbc00179164736f6c63430008110033'

type BondQuerierConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (
  xs: BondQuerierConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1

export class BondQuerier__factory extends ContractFactory {
  constructor(...args: BondQuerierConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args)
    } else {
      super(_abi, _bytecode, args[0])
    }
  }

  override deploy(
    _bond: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): Promise<BondQuerier> {
    return super.deploy(_bond, overrides || {}) as Promise<BondQuerier>
  }
  override getDeployTransaction(
    _bond: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(_bond, overrides || {})
  }
  override attach(address: string): BondQuerier {
    return super.attach(address) as BondQuerier
  }
  override connect(signer: Signer): BondQuerier__factory {
    return super.connect(signer) as BondQuerier__factory
  }

  static readonly bytecode = _bytecode
  static readonly abi = _abi
  static createInterface(): BondQuerierInterface {
    return new utils.Interface(_abi) as BondQuerierInterface
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): BondQuerier {
    return new Contract(address, _abi, signerOrProvider) as BondQuerier
  }
}
