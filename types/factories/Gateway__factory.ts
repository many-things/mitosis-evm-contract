/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type { Gateway, GatewayInterface } from "../Gateway";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract LiquidityManager",
        name: "_lmgr",
        type: "address",
      },
      {
        internalType: "contract DenomManager",
        name: "_dmgr",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "denom",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "opId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "opArgs",
        type: "bytes",
      },
    ],
    name: "InitOperation",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "dmgr",
    outputs: [
      {
        internalType: "contract DenomManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lmgr",
    outputs: [
      {
        internalType: "contract LiquidityManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "args",
            type: "bytes",
          },
        ],
        internalType: "struct Operation",
        name: "_op",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct TokenPermit",
        name: "_token",
        type: "tuple",
      },
    ],
    name: "send",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "args",
            type: "bytes",
          },
        ],
        internalType: "struct Operation",
        name: "_op",
        type: "tuple",
      },
    ],
    name: "send",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "args",
            type: "bytes",
          },
        ],
        internalType: "struct Operation",
        name: "_op",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct Token",
        name: "_token",
        type: "tuple",
      },
    ],
    name: "send",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516110f83803806110f883398101604081905261002f916100b9565b600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600180546001600160a01b039384166001600160a01b031991821617909155600280549290931691161790556100f3565b6001600160a01b03811681146100b657600080fd5b50565b600080604083850312156100cc57600080fd5b82516100d7816100a1565b60208401519092506100e8816100a1565b809150509250929050565b610ff6806101026000396000f3fe6080604052600436106100705760003560e01c80638da5cb5b1161004e5780638da5cb5b146100e65780639cf11c5514610106578063c7555d9714610126578063f2fde38b1461014657600080fd5b806314a7aa6c146100755780634f4f2d23146100b15780637b30c41c146100d3575b600080fd5b34801561008157600080fd5b50600154610095906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b3480156100bd57600080fd5b506100d16100cc366004610cfb565b610166565b005b6100d16100e1366004610dca565b61050e565b3480156100f257600080fd5b50600054610095906001600160a01b031681565b34801561011257600080fd5b50600254610095906001600160a01b031681565b34801561013257600080fd5b506100d1610141366004610e1a565b6107c7565b34801561015257600080fd5b506100d1610161366004610ebf565b610b14565b60008160200151116101bf5760405162461bcd60e51b815260206004820152601d60248201527f616d6f756e74206d7573742062652067726561746572207468616e203000000060448201526064015b60405180910390fd5b8060600151516041146102145760405162461bcd60e51b815260206004820152601860248201527f696e76616c6964207369676e6174757265206c656e677468000000000000000060448201526064016101b6565b805160608083015160208082015160408084015193909401519186015184870151855163d505accf60e01b815233600482015230602482015260448101929092526064820152600092831a6084820181905260a4820183905260c4820185905294519193926001600160a01b0387169263d505accf9260e480820193929182900301818387803b1580156102a757600080fd5b505af11580156102bb573d6000803e3d6000fd5b5050505060208501516040516323b872dd60e01b815233600482015230602482015260448101919091526001600160a01b038516906323b872dd906064016020604051808303816000875af1158015610318573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061033c9190610ee3565b50600154602086015160405163095ea7b360e01b81526001600160a01b03928316600482015260248101919091529085169063095ea7b3906044016020604051808303816000875af1158015610396573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ba9190610ee3565b5060015460408051808201825287516001600160a01b0390811682526020808a01519083019081529251632a3cafa760e01b815233600482015291518116602483015291516044820152911690632a3cafa790606401600060405180830381600087803b15801561042a57600080fd5b505af115801561043e573d6000803e3d6000fd5b5050600254875160405163def2489b60e01b81526001600160a01b039182166004820152600094509116915063def2489b90602401602060405180830381865afa158015610490573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104b49190610f05565b90508660000151816001600160a01b0316896001600160a01b0316600080516020610fa183398151915289600001518a602001518c602001516040516104fc93929190610f22565b60405180910390a45050505050505050565b34156106a557600254604080516341917ff960e11b815290516000926001600160a01b031691638322fff29160048083019260209291908290030181865afa15801561055e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105829190610f05565b60025460405163def2489b60e01b81526001600160a01b0380841660048301529293506000929091169063def2489b90602401602060405180830381865afa1580156105d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105f69190610f05565b60015460405163f340fa0160e01b81526001600160a01b03878116600483015292935091169063f340fa019034906024016000604051808303818588803b15801561064057600080fd5b505af1158015610654573d6000803e3d6000fd5b50505050508260000151816001600160a01b0316856001600160a01b0316600080516020610fa18339815191528534886020015160405161069793929190610f22565b60405180910390a450505050565b600254604080516320d494e560e21b815290516000926001600160a01b03169163835253949160048083019260209291908290030181865afa1580156106ef573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107139190610f05565b60025460405163def2489b60e01b81526001600160a01b0380841660048301529293506000929091169063def2489b90602401602060405180830381865afa158015610763573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107879190610f05565b90508260000151816001600160a01b0316856001600160a01b0316600080516020610fa18339815191528534886020015160405161069793929190610f22565b600081602001511161081b5760405162461bcd60e51b815260206004820152601d60248201527f616d6f756e74206d7573742062652067726561746572207468616e203000000060448201526064016101b6565b8051604051636eb1769f60e11b81523360048201523060248201526000906001600160a01b0383169063dd62ed3e90604401602060405180830381865afa15801561086a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061088e9190610f87565b905082602001518110156108dd5760405162461bcd60e51b8152602060048201526016602482015275696e73756666696369656e7420616c6c6f77616e636560501b60448201526064016101b6565b60208301516040516323b872dd60e01b815233600482015230602482015260448101919091526001600160a01b038316906323b872dd906064016020604051808303816000875af1158015610936573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061095a9190610ee3565b50600154602084015160405163095ea7b360e01b81526001600160a01b03928316600482015260248101919091529083169063095ea7b3906044016020604051808303816000875af11580156109b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109d89190610ee3565b50600154604051632a3cafa760e01b815233600482015284516001600160a01b0390811660248301526020860151604483015290911690632a3cafa790606401600060405180830381600087803b158015610a3257600080fd5b505af1158015610a46573d6000803e3d6000fd5b5050600254855160405163def2489b60e01b81526001600160a01b039182166004820152600094509116915063def2489b90602401602060405180830381865afa158015610a98573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610abc9190610f05565b90508460000151816001600160a01b0316876001600160a01b0316600080516020610fa1833981519152876000015188602001518a60200151604051610b0493929190610f22565b60405180910390a4505050505050565b6000546001600160a01b03163314610b5d5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016101b6565b600080546001600160a01b0319166001600160a01b0383169081178255604051909133917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a350565b6001600160a01b0381168114610bbd57600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b6040516080810167ffffffffffffffff81118282101715610bf957610bf9610bc0565b60405290565b600082601f830112610c1057600080fd5b813567ffffffffffffffff80821115610c2b57610c2b610bc0565b604051601f8301601f19908116603f01168101908282118183101715610c5357610c53610bc0565b81604052838152866020858801011115610c6c57600080fd5b836020870160208301376000602085830101528094505050505092915050565b600060408284031215610c9e57600080fd5b6040516040810167ffffffffffffffff8282108183111715610cc257610cc2610bc0565b81604052829350843583526020850135915080821115610ce157600080fd5b50610cee85828601610bff565b6020830152505092915050565b600080600060608486031215610d1057600080fd5b8335610d1b81610ba8565b9250602084013567ffffffffffffffff80821115610d3857600080fd5b610d4487838801610c8c565b93506040860135915080821115610d5a57600080fd5b9085019060808288031215610d6e57600080fd5b610d76610bd6565b8235610d8181610ba8565b808252506020830135602082015260408301356040820152606083013582811115610dab57600080fd5b610db789828601610bff565b6060830152508093505050509250925092565b60008060408385031215610ddd57600080fd5b8235610de881610ba8565b9150602083013567ffffffffffffffff811115610e0457600080fd5b610e1085828601610c8c565b9150509250929050565b60008060008385036080811215610e3057600080fd5b8435610e3b81610ba8565b9350602085013567ffffffffffffffff80821115610e5857600080fd5b610e6488838901610c8c565b94506040603f1984011215610e7857600080fd5b60405192506040830191508282108183111715610e9757610e97610bc0565b506040908152850135610ea981610ba8565b8152606094909401356020850152509093909250565b600060208284031215610ed157600080fd5b8135610edc81610ba8565b9392505050565b600060208284031215610ef557600080fd5b81518015158114610edc57600080fd5b600060208284031215610f1757600080fd5b8151610edc81610ba8565b60018060a01b038416815260006020848184015260606040840152835180606085015260005b81811015610f6457858101830151858201608001528201610f48565b506000608082860101526080601f19601f83011685010192505050949350505050565b600060208284031215610f9957600080fd5b505191905056fe2af3306f1f1ed163fc7ecde37668401571145f7b1b7f28c082798d1cc4030a59a2646970667358221220fbf6077150dcbf6f267296d799847347eeddf015109a585f4af539fef158b56e64736f6c63430008110033";

type GatewayConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GatewayConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Gateway__factory extends ContractFactory {
  constructor(...args: GatewayConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _lmgr: AddressLike,
    _dmgr: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_lmgr, _dmgr, overrides || {});
  }
  override deploy(
    _lmgr: AddressLike,
    _dmgr: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_lmgr, _dmgr, overrides || {}) as Promise<
      Gateway & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Gateway__factory {
    return super.connect(runner) as Gateway__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GatewayInterface {
    return new Interface(_abi) as GatewayInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Gateway {
    return new Contract(address, _abi, runner) as unknown as Gateway;
  }
}
